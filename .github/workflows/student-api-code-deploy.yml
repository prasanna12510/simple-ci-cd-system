name: student-api-code-deploy
on:
  push:
    branches: '**'
    # tags:
    #   - student-api-*
    # paths:
    #   - "webapi/**"

jobs:
  student-api-unit-test:
    name: Test - Units
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: mvn clean test
        working-directory: webapi

  artifact:
    name: Publish - GitHub Packages
    runs-on: ubuntu-latest
    needs: [student-api-unit-test]

    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Publish artifact on GitHub Packages
        run: mvn -B clean deploy -DskipTests
        working-directory: webapi
        env:
          GITHUB_TOKEN: ${{ secrets.REPOSITORY_ACCESS_TOKEN }}


  student-api-image-build:
    name: Publish - Docker Hub
    runs-on: ubuntu-latest
    needs: [student-api-unit-test]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Login docker
        run : make docker-login
        env :
          DOCKER_TOKEN: ${{ secrets.REPOSITORY_ACCESS_TOKEN }}
          DOCKER_USERNAME: ${{ secrets.REPOSITORY_ACCESS_USER }}

      - name: Build docker image
        run : mvn install dockerfile:build
        working-directory: webapi
        env:
          MASTER_COMMIT_ID: ${{ toJson(github.sha) }}

      - name: Push docker image to docker_hub
        run : |
          export APP_TAG=`sed -e 's/^"//' -e 's/"$//' <<<"$MASTER_COMMIT_ID" | cut -c1-7`
          make docker-retag-push
        env:
          MASTER_COMMIT_ID: ${{ toJson(github.sha) }}
          DOCKER_USERNAME: ${{ secrets.REPOSITORY_ACCESS_USER }}
          DOCKER_REPO: student-api

  student-api-deploy:
    name: Helm lint and release
    runs-on: ubuntu-latest
    needs: student-api-image-build

    steps:
     - uses: actions/checkout@v2
     - name: Helm Lint
       uses: WyriHaximus/github-action-helm3@v2
       with:
         exec: helm lint ./helm-chart/student-api
     - name: Helm install
       uses: WyriHaximus/github-action-helm3@v2
       with:
         exec: helm upgrade --install student-api --namespace=student-api ./helm-chart/student-api
         kubeconfig: '${{ secrets.KUBECONFIG }}'
